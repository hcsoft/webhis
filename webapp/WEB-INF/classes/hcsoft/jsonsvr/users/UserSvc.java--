package hcsoft.jsonsvr.users;

import hcsoft.db.DbProc;
import hcsoft.db.vo.Users;

import java.util.HashMap;
import java.util.Map;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.apache.commons.beanutils.BeanUtils;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@RequestMapping("/users")
public class UserSvc {
	@PersistenceContext
	private EntityManager em;

	@RequestMapping("/list")
	@Transactional(propagation = Propagation.NOT_SUPPORTED, readOnly = true)
	public @ResponseBody
	Map list(@RequestBody Map json) throws Exception {
		return DbProc.queryPage(em, "select * from Users",
				(Map) json.get("params"), (Map) json.get("page"),
				new Class[] { Users.class });
		// return DbProc.queryPage(sessionFactory, "from Users",
		// (Map) json.get("params"), (Map) json.get("page"));
	}

	@RequestMapping("/add")
	@Transactional
	public @ResponseBody
	Map add(@RequestBody Map json) throws Exception {
		System.out.println("===add=");
		Map ret = new HashMap();
		Users user = new Users();
		try {
			BeanUtils.populate(user, json);
		} catch (Exception e) {

		}
		em.persist(user);
		ret.put("user", user);
		ret.put("success", true);
		return ret;
	}

	@RequestMapping("/del/{id}")
	@Transactional
	public @ResponseBody
	Map del(@PathVariable(value = "id") String id) throws Exception {
		System.out.println("==id==" + id);
		em.remove(em.find(Users.class, id));
		Map ret = new HashMap();
		ret.put("success", true);
		return ret;
	}
}
